* {
    box-sizing: border-box;
}

html, body {
    margin: 0;
    padding: 0;
}
:root {
    --controls-height: 100px;
}

/* Game wrapper */
.game {
    display: grid;
    height: 100vh;
    grid-template-areas: 'controls' 'board';
    grid-template-rows: var(--controls-height) 1fr;
    grid-template-columns: 1fr;
}

@media (width > 850px) {
    .game {
        grid-template-areas: 'controls board';
        grid-template-columns: minmax(200px, 400px) 70% ;
        grid-template-rows: 1fr;
    }
}

/* Card */
.card {
    transition: opacity ease .5s;
    opacity: 1;
    perspective: 1000px;
    position: relative;
    cursor: pointer;
    width: 100%;
    height: 100%;
}

.card-inner {
    inset: 0;
    position: absolute;
    transform-style: preserve-3d;
    transition: transform 0.4s ease;
}

.card.opened .card-inner {
    transform: rotateY(180deg);
}

.card-front,
.card-back {
    position: absolute;
    inset: 0;
    backface-visibility: hidden;
    background-size: contain;
    background-repeat: no-repeat;
}

.card-back {
    transform: rotateY(180deg);
}

.removed {
    opacity: 0;
}

/* Board */
.board-wrapper {
    grid-area: board;
    display: flex;
    justify-content: center;
    align-items: center;
    height: calc(100vh - var(--controls-height));
    overflow: hidden;
    /* Prevent board from overflowing */
}

@media (width > 850px) {
    .board-wrapper {
        height: 100vh;
    }
}

.board {
    display: grid;
    padding: 16px;
    gap: 8px;
    aspect-ratio: 3 / 4;
    height: 100%;
}

@media (width < 520px) {
    .board {
        height: auto;
        width: 100%;
        align-self: flex-start;
    }
}

.disabled {
    pointer-events: none;
}

/* Controls */
.controls {
    padding: 16px;
    border: 2px dashed #ddd;
    grid-area: controls;
}

.counter {
    font-size: 25px;
}

.counter::before {
    content: 'Moves: ';
}
